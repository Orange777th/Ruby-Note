11 Ruby 配列
2020/12/7

配列
　配列とは複数のデータをまとめて格納できるオブジェクトのことです
　配列内のデータ（要素）は順番に並んでいて添字（インデックス）を指定することでデータを取り出すことができます

　例）
　　colors = [‘あか’, ‘あお’, ‘きいろ’]

配列の作る方法
　例）

　　空の配列
　　[]（ブランケット）

　　3つの要素が格納された配列
　　配列名 = [ 要素1, 要素2, 要素3]
　　colors = [‘あか’, ‘あお’, ‘きいろ’]


配列の値を取り出す方法
　例）colors = [‘あか’, ‘あお’, ‘きいろ’]の場合

　　赤を取り出すとき
　　puts colors[0]

　　出力結果
　　赤

　　青を取り出すとき
　　puts colors[2]

　　出力結果
　　青

　　※「colors.empty?」で配列が空かどうか確認することができます
　　空である場合trueを返します

　　※「colors.include(‘みどり)?」で配列内に’みどり’が存在するかどうかを確認することができます
　　存在しない場合falseを返します

　　※「colors.reverse」で配列の順番を反対にしたものを出力します
　　元の配列は変化しません
　　上の例の場合
　　colors = [‘きいろ’, ‘あお’, ‘あか’]

　　※「colors.reverse!」で配列の順番を反対にしたものを出力します
　　元の配列が反対に変化します
　　上の例の場合
　　colors = [‘きいろ’, ‘あお’, ‘あか’]

　　※「colors.shuffle」で配列の順番をランダムにしたものを出力します
　　元の配列は変化しません
　　上の例の場合
　　colors = [‘きいろ’, ‘あお’, ‘あか’]

　　※「colors.shuffle!」で配列の順番をランダムにしたものを出力します
　　元の配列がランダムに変化します
　　上の例の場合
　　colors = [‘きいろ’, ‘あお’, ‘あか’]

　　※壊滅的メソッド（!）
　　「colors.reverse!」のように呼び出したオブジェクト（変数）の中身を変更することができます



0から30の数字を持つ配列を作成する方法
　a　= (0..30).to_a
　a

　出力結果
　 [1,2,3,4,5,6,7,8,9, ・・・,28,29,30]

　※0..30の部分は範囲オブジェクトと言います



配列に変数を追加する方法
　x = [1,2,3,4,5,6,7,8,9,10]の配列があるとき
　「x << 11」と入力すると配列の最後に11を追加することができます
　「x.push(11)」でも同様に配列の最後に11を追加することができます


配列の変数を取り除く方法
　x = [1,2,3,4,5,6,7,8,9,10]の配列があるとき
　「x.pop」と入力すると配列の最後の要素が出力され、同時に配列から取り除かれます

　例）
　　x = [1,2,3,4,5,6,7,8,9,10]
　　x.pop
　　x

　　出力結果
　　10
　　x = [1,2,3,4,5,6,7,8,9]

　　「x.shift」と入力すると配列の最初の要素が出力され、同時に配列から取り除かれます

　例）
　　x = [1,2,3,4,5,6,7,8,9,10]
　　x.pop
　　x

　　出力結果
　　1
　　x = [2,3,4,5,6,7,8,9]

　例）指定した要素を取り除く方法
　　x = [1,2,3,4,5,6,7,8,9,10]
　　x.pop(2)
　　x

　　出力結果
　　3
　　x = [1,2,4,5,6,7,8,9]



配列の重複を除いた状態を出力する方法
　x = [1,2,3,4,5,6,6,6,7,8,9,10,3]の配列があるとき
　「x.uniq」と入力すると配列の内容が出力されますが重複する要素が存在する場合はその要素は一度のみ出力されます
　配列の内容は変化しません

　例）
　　x = [1,2,3,4,5,6,6,6,7,8,9,10,3]
　　x.uniq

　　出力結果
　　x = [1,2,3,4,5,6,7,8,9,10]

　　※「uniq!」とすると元の配列が出力結果と同じものに変化します



配列の文字を結合させる方法
　x = [‘my’, ‘name’, ‘is’, ‘oren’]の配列があるとき
　「x.join」を入力することで要素の文字列を結合させることができます

　例）
　　x = [‘my’, ‘name’, ‘is’, ‘oren’]
　　x.join

　　出力結果
　　“mynameisoren”

　　※各要素の間に空白を入れたいときは「x.join.(‘ ’)」と入力します

　例）
　　x = [‘my’, ‘name’, ‘is’, ‘oren’]
　　x.join.(‘ ’)

　　出力結果
　　“my name is oren”


配列の中身を整理する方法
　x = [‘d’, ‘a, ‘c’, ‘b’]の配列があるとき

　例）昇順に整理したいとき
　　x.sort
　　出力結果
　　x = [‘a, ‘b’, ‘c’, ‘d’]

　例）降順に整理したいとき
　　x.sort.reverse
　　出力結果
　　x = [‘d, ‘c’, ‘b’, ‘a’]

　※それぞれ配列の内容は変化しません

　例）整理した結果を元の配列に反映させるとき
　　x.sort!.reverse!
　　出力結果
　　x = [‘d, ‘c’, ‘b’, ‘a’]

配列の数を確認する方法
　例）x = [‘d’, ‘a, ‘c’, ‘b’]の配列があるとき

　　x.size
　　出力結果
　　4

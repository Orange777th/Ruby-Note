06 比較演算子・文字列と数値の変換・インクリメント
2020/12/7

主な比較演算子
< ：より小さい
<=：以下
>=：以上
==：等しい
!=：等しくない

例）
1 < 3
=>true
※1は3より小さいためtrueが返されます

1>2
=>false
※1は2より大きくないためfalseが返されます

1==1
=>true
※1と1は等しいのでtrueが返されます

1!=2
=>true
※1と2は等しくないのでtrueが返されます



演算子の優先順位
1.0 + 2.0 * 3.0 / 4.0 
=>2.5

※「*」「/」の方が優先順位が高いため「2.0 * 3.0 / 4.0 」が先に計算されます
1.0 + 2.0 * 3.0 / 4.0 
=1.0 + (2.0 * 3.0 / 4.0) 
=1.0 + 1.5
=2.5

カッコを付けて優先順位を変更することができます
例）(1.0 + 2.0 )* 3.0 / 4.0 の場合
(1.0 + 2.0 )* 3.0 / 4.0
=(3.0)* 3.0 / 4.0
=9.0/4.0
=2.25


演算子の優先順位（リファレンスより）
高い   ::
       []
       +(単項)  !  ~
       **
       -(単項)
       *  /  %
       +  -
       << >>
       &
       |  ^
       > >=  < <=
       <=> ==  === !=  =~  !~
       &&
       ||
       ..  ...
       ?:(条件演算子)
       =(+=, -= ... )
       not
低い   and or




数値と文字列の関係

数値と文字列は加算することができません
1+’1’と入力するとTypeErrorになります



文字列を数字に変換する方法
文字列を数字に変換するときは文字列の後ろに「.to_i」、
小数点以下も出力する場合は「.to_f」を入力します

例）
1 + ‘1’.to_i
=>2

2+’2.5’.to_f
=>4.5

数字を文字列に変換する方法
数字を文字列に変換するときは数字の後ろに「.to_s」を入力します

例）
‘Your number is ‘ + 1.to_s
=>”Your number is 1 “





インクリメント・デクリメント
インクリメント：値に1を足す
デクリメント：値から1を引く

※JavaScriptで使われている「++」と「—」はRubyでは使われていません

例）
n = 1
=>1

n = n + 1
=>2
※nに1を加えます

n += 1
n => 3
※さらにnに1を加えます

n = n - 1
n=> 2
※nから1を引きます
 
n -= 1
n => 1
※さらにnから1を引きます
